{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/UI/LoadingSpinner.module.css","components/UI/Card.module.css","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/UI/LoadingSpinner.js","components/UI/Card.js","components/quotes/QuoteForm.js","hooks/use-http.js","lib/api.js","pages/AddQuote.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/DetailedQuote.js","pages/PageNotFound.js","App.js","index.js"],"names":["module","exports","MainNavigation","className","classes","header","logo","nav","to","activeClassName","active","Layout","props","main","children","LoadingSpinner","spinner","Card","card","QuoteForm","useState","isEntered","setIsEntered","authorInputRef","useRef","textInputRef","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","control","htmlFor","type","id","ref","rows","actions","onClick","httpReducer","state","action","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","comment","commentId","name","getAllComments","transformedComments","commentObj","AddQuote","history","useHistory","useEffect","console","log","QuoteItem","item","QuoteList","quotes","ascending","useLocation","isAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","list","map","quote","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","length","NewCommentForm","commentTextRef","useParams","reRender","submitFormHandler","CommentItem","CommentsList","comments","Comments","isAddingComment","setIsAddingComment","rendering","setRendering","HighlightedQuote","DetailedQuotes","params","match","useRouteMatch","path","exact","url","PageNotFound","App","DetailedQuote","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ac7c5f39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__Iuea_\",\"logo\":\"MainNavigation_logo__3QBo1\",\"nav\":\"MainNavigation_nav__2LhoG\",\"active\":\"MainNavigation_active__3jmaS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3ipT5\",\"loading\":\"QuoteForm_loading__1WY3V\",\"control\":\"QuoteForm_control__7Hnbt\",\"actions\":\"QuoteForm_actions__3vder\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1sGfk\",\"loading\":\"NewCommentForm_loading__AStf7\",\"control\":\"NewCommentForm_control__1ebj0\",\"actions\":\"NewCommentForm_actions__1dYRs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3Mp3E\",\"sorting\":\"QuoteList_sorting__3TQp3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__i-buI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1e4iP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2s3rR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__15yE5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__19flA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1sfv2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__136qb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__2qMZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__31mq_\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst MainNavigation = () => {\r\n     return (\r\n          <header className={classes.header}>\r\n               <div className={classes.logo}>Great Codes</div>\r\n               <nav className={classes.nav}>\r\n                    <ul>\r\n                         <li>\r\n                              <NavLink to='/quotes' activeClassName={classes.active}>All Quotes</NavLink>\r\n                         </li>\r\n                    </ul>\r\n                    <ul>\r\n                         <li >\r\n                              <NavLink to='/add-quote' activeClassName={classes.active}>Add a Quote</NavLink>\r\n                         </li>\r\n                    </ul>\r\n               </nav>\r\n          </header>\r\n     )\r\n}\r\n\r\nexport default MainNavigation","import React, { Fragment } from 'react'\r\nimport MainNavigation from './MainNavigation'\r\n\r\nimport classes from './Layout.module.css'\r\n\r\nconst Layout = (props) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<MainNavigation />\r\n\t\t\t<main className={classes.main}>\r\n\t\t\t\t{props.children}\r\n\t\t\t</main>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nexport default Layout","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntered, setIsEntered] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusHandler = () => {\n    setIsEntered(true);\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntered(false);\n  }\n\n  return (\n    <Fragment>\n      <Prompt when={isEntered} message={(location) => 'Are you sure you want to go back, you have unsubmitted changes'} />\n      <Card>\n        <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className='btn' onClick={finishEnteringHandler}>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://twenty-bff1d-default-rtdb.firebaseio.com/';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.comment),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport QuoteForm from '../components/quotes/QuoteForm'\r\nimport useHttp from '../hooks/use-http'\r\nimport { addQuote } from '../lib/api'\r\n\r\nconst AddQuote = () => {\r\n       const history = useHistory();\r\n\r\n       const { sendRequest, status } = useHttp(addQuote);\r\n\r\n       useEffect(() => {\r\n              if (status === 'completed') {\r\n                     history.push('/quotes');\r\n              }\r\n       }, [status, history])\r\n\r\n\r\n       const addQuoteHandler = quoteData => {\r\n              console.log(quoteData)\r\n              sendRequest(quoteData)\r\n       }\r\n\r\n       return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n}\r\n\r\nexport default AddQuote","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const locationParams = new URLSearchParams(location.search);\n  const isAscending = locationParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isAscending);\n\n  const sortingChangeHandler = () => {\n    history.push('/quotes?sort=' + (isAscending ? 'desc' : 'asc'));\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortingChangeHandler}>\n          Sort {isAscending ? 'Descending' : 'Ascending'}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/add-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, { useEffect } from 'react'\r\nimport QuoteList from '../components/quotes/QuoteList'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport useHttp from '../hooks/use-http'\r\nimport { getAllQuotes } from '../lib/api'\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\r\n\r\nconst AllQuotes = () => {\r\n       const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true);\r\n       useEffect(() => {\r\n              sendRequest();\r\n       }, [sendRequest])\r\n\r\n       console.log(status, loadedQuotes)\r\n\r\n       if (status === 'pending' || status === null) return <div className='centered' ><LoadingSpinner /></div>\r\n\r\n       if (error) return <p className='centered focused'>{error}</p>\r\n\r\n       if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) return <NoQuotesFound />\r\n\r\n       if (status === 'completed' && loadedQuotes) return <QuoteList quotes={loadedQuotes} />\r\n}\r\n\r\nexport default AllQuotes","import { useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './NewCommentForm.module.css';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { quoteId } = useParams();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  useEffect(() => {\n    status === 'completed' && props.reRender();\n  }, [status])\n\n  if (status === 'pending') return <div className='centered'><LoadingSpinner /></div>;\n\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    let comment = commentTextRef.current.value\n    let commentData = {\n      comment: { text: comment },\n      quoteId\n    };\n\n    sendRequest(commentData);\n\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nimport { getAllComments } from '../../lib/api';\nimport useHttp from '../../hooks/use-http';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst CommentsList = (props) => {\n  const { sendRequest, data: comments, status, error } = useHttp(getAllComments);\n  const { quoteId } = useParams();\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId, props])\n\n  if (status === 'pending') return <div className='centered'><LoadingSpinner /></div>\n\n  console.log(comments)\n  return (\n    <ul className={classes.comments}>\n      {comments && comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const [rendering, setRendering] = useState(false);\n  console.log('Comments')\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const reRenderHandler = () => {\n    setRendering(!rendering);\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm reRender={reRenderHandler} />}\n      <p>Comments...</p>\n      <CommentsList rendering={rendering} />\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  console.log(props)\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link, Route, useParams, useRouteMatch } from 'react-router-dom'\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\n\r\n// const DUMMY_DATA = [\r\n// \t{ id: 'q1', author: 'Nimit', text: 'Kehte Hai Khuda ne iss jahan main sabhi ke liye.' },\r\n// \t{ id: 'q2', author: 'Nimit', text: 'Kisi na kisi ko hai banaya har kisi ke liye' },\r\n// ]\r\n\r\nconst DetailedQuotes = () => {\r\n\tconst params = useParams();\r\n\tconst match = useRouteMatch();\r\n\r\n\tconst { sendRequest, data: quote } = useHttp(getSingleQuote, true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsendRequest(params.quoteId)\r\n\t}, [sendRequest, params])\r\n\r\n\r\n\t// const quote = DUMMY_DATA.find(quote => quote.id === params.quoteId);\r\n\tconsole.log(quote)\r\n\tif (!quote) {\r\n\t\tconsole.log(quote)\r\n\t\treturn <p>Quote Empty</p>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<HighlightedQuote text={quote.text} author={quote.author} />\r\n\t\t\t<Route path={match.path} exact>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Link className='btn--flat centered' to={`${match.url}/comments`}>\r\n\t\t\t\t\t\t<h4>View Comments</h4>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</Route>\r\n\t\t\t<Route path={`${match.path}/comments`}>\r\n\t\t\t\t<Comments />\r\n\t\t\t</Route>\r\n\t\t</Fragment>\r\n\t)\r\n}\r\n\r\nexport default DetailedQuotes","import React from 'react'\r\n\r\nconst PageNotFound = () => {\r\n       return (\r\n              <div>Page Not Found</div>\r\n       )\r\n}\r\n\r\nexport default PageNotFound;","import React, { Suspense } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\nimport AddQuote from \"./pages/AddQuote\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport DetailedQuote from \"./pages/DetailedQuote\";\nimport PageNotFound from \"./pages/PageNotFound\";\n\n// const DetailedQuote = React.lazy(() => import('./pages/DetailedQuote'));\n// const AddQuote = React.lazy(() => import('./pages/AddQuote'));\n// const PageNotFound = React.lazy(() => import('./pages/PageNotFound'));\n\nfunction App() {\n  return (\n    <Layout>\n      {/* <Suspense fallback={<div className=\"centered\"><LoadingSpinner /></div>}> */}\n        <Switch>\n          <Route path='/' exact>\n            <Redirect to={'/quotes'} />\n          </Route>\n          <Route path='/quotes' exact>\n            <AllQuotes />\n          </Route>\n          <Route path='/quotes/:quoteId'>\n            <DetailedQuote />\n          </Route>\n          <Route path='/add-quote'>\n            <AddQuote />\n          </Route>\n          <Route path=''>\n            <PageNotFound />\n          </Route>\n        </Switch>\n      {/* </Suspense> */}\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<BrowserRouter><App /></BrowserRouter>);\n"],"sourceRoot":""}